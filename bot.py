import asyncio
import logging
from aiogram import Bot, Dispatcher, F, types
from aiogram.filters import Command
from aiogram.types import (
    ReplyKeyboardMarkup, KeyboardButton,
    InlineKeyboardMarkup, InlineKeyboardButton
)
from aiogram.fsm.state import State, StatesGroup
from aiogram.fsm.context import FSMContext
from aiogram.fsm.storage.memory import MemoryStorage

# --- –ö–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—è ---
TOKEN = "7973091517:AAHBgg_Yn_E3VbNh3gDYwYuXKZekV25NRDU"
ADMIN_ID = 7585723570
VISA_CARD = "4175420010122027"
TRC20_ADDR = "TFXoVhmTC7E6M8R3rVycXaJvAMR84Vy9fY"

logging.basicConfig(level=logging.INFO)

bot = Bot(token=TOKEN)
storage = MemoryStorage()
dp = Dispatcher(storage=storage)

# --- –°–æ—Å—Ç–æ—è–Ω–∏—è ---
class Form(StatesGroup):
    awaiting_sizes = State()

# --- –ö–ª–∞–≤–∏–∞—Ç—É—Ä—ã ---
def make_start_kb():
    kb = InlineKeyboardMarkup(inline_keyboard=[
        [InlineKeyboardButton(text="‚ÑπÔ∏è –û–∑–Ω–∞–∫–æ–º–∏—Ç—å—Å—è —Å –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–µ–π", callback_data="to_details")]
    ])
    return kb


def kb_details_to_prep():
    kb = InlineKeyboardMarkup(inline_keyboard=[
        [InlineKeyboardButton(text="‚úÖ –ú–Ω–µ –ø–æ–¥—Ö–æ–¥–∏—Ç, —Ö–æ—á—É —É–∑–Ω–∞—Ç—å –æ –ø–æ–¥–≥–æ—Ç–æ–≤–∫–µ", callback_data="to_prep")]
    ])
    return kb

def kb_prep():
    kb = InlineKeyboardMarkup(inline_keyboard=[
        [InlineKeyboardButton(text="üìù –£–∫–∞–∑–∞—Ç—å —Ä–∞–∑–º–µ—Ä—ã", callback_data="sizes")],
        [InlineKeyboardButton(text="‚û°Ô∏è –ü—Ä–æ–¥–æ–ª–∂–∏—Ç—å", callback_data="to_meet")]
    ])
    return kb

def kb_to_payment():
    kb = InlineKeyboardMarkup(inline_keyboard=[
        [InlineKeyboardButton(text="üí≥ –û–ø–ª–∞—Ç–∏—Ç—å ‚Äî VISA", callback_data="pay_visa")],
        [InlineKeyboardButton(text="‚Çø –û–ø–ª–∞—Ç–∏—Ç—å ‚Äî USDT (TRC20)", callback_data="pay_trc20")]
    ])
    return kb

def kb_send_check():
    kb = InlineKeyboardMarkup(inline_keyboard=[
        [InlineKeyboardButton(text="üì§ –Ø –æ–ø–ª–∞—Ç–∏–ª(–∞), –æ—Ç–ø—Ä–∞–≤–∏—Ç—å —á–µ–∫", callback_data="i_sent_check")]
    ])
    return kb

# --- –•—Ä–∞–Ω–∏–ª–∏—â–∞ –≤—Ä–µ–º–µ–Ω–Ω—ã—Ö –¥–∞–Ω–Ω—ã—Ö ---
last_payment_method = {}
pending_payments = set()

# --- Handlers ---

@dp.message(Command("start"))
async def cmd_start(message: types.Message):
    text = (
        "üëã –î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å!\n\n"
        "–≠—Ç–æ—Ç –±–æ—Ç –ø–æ–º–æ–≥–∞–µ—Ç –æ—Ä–≥–∞–Ω–∏–∑–æ–≤–∞—Ç—å –ø–µ—Ä–µ—Ö–æ–¥ –∏–∑ —Å—Ç—Ä–∞–Ω—ã –ê –≤ —Å—Ç—Ä–∞–Ω—É –ë.\n"
        "–ú—ã –ø–æ–¥–µ–ª–∏–º—Å—è —Å –≤–∞–º–∏ —Ç–æ–ª—å–∫–æ —Ñ–∞–∫—Ç–∞–º–∏ ‚Äî –±–µ–∑ –ª–∏—à–Ω–µ–π –≤–æ–¥—ã. –í—Å—ë –æ—Å–Ω–æ–≤–∞–Ω–æ –Ω–∞ –Ω–∞—à–µ–º —Ä–µ–∞–ª—å–Ω–æ–º –æ–ø—ã—Ç–µ.\n\n"
        "–í—ã —Å–º–æ–∂–µ—Ç–µ —à–∞–≥ –∑–∞ —à–∞–≥–æ–º —É–∑–Ω–∞—Ç—å –≤—Å—é –Ω—É–∂–Ω—É—é –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –∏ –ø–æ–¥–≥–æ—Ç–æ–≤–∏—Ç—å—Å—è –∫ –ø–µ—Ä–µ—Ö–æ–¥—É."
    )
    await message.answer(text, reply_markup=make_start_kb())

@dp.callback_query(F.data == "to_details")
async def cb_to_details(query: types.CallbackQuery):
    text = (
        "‚õ∞ –ù–∞—à –æ–ø—ã—Ç\n\n"
        "–ú—ã –ª–∏—á–Ω–æ –ø—Ä–æ—à–ª–∏ —ç—Ç–æ—Ç –ø—É—Ç—å ‚Äî –Ω–µ –Ω–∞ —Å–ª–æ–≤–∞—Ö, –∞ –Ω–∞ –¥–µ–ª–µ. üåÑ\n"
        "–≠—Ç–æ –±—ã–ª –ø–µ—Ä–µ—Ö–æ–¥ —á–µ—Ä–µ–∑ –≥–æ—Ä—ã: –ø–µ—Ä–µ–º–µ–Ω—á–∏–≤–∞—è –ø–æ–≥–æ–¥–∞, –¥–ª–∏–Ω–Ω—ã–µ –ø–æ–¥—ä—ë–º—ã, —Ö–æ–ª–æ–¥–Ω—ã–µ –Ω–æ—á–∏ –∏ —Ç—ë–ø–ª—ã–µ —Ä–∞—Å—Å–≤–µ—Ç—ã.\n"
        "–ö–∞–∂–¥—ã–π —É—á–∞—Å—Ç–æ–∫ –º–∞—Ä—à—Ä—É—Ç–∞ –º—ã –ø—Ä–æ–≤–µ—Ä–∏–ª–∏ —Å–∞–º–∏, —á—Ç–æ–±—ã —É–±–µ–¥–∏—Ç—å—Å—è, —á—Ç–æ –æ–Ω –±–µ–∑–æ–ø–∞—Å–µ–Ω, —Å–∫—Ä—ã—Ç –æ—Ç –ø–æ—Å—Ç–æ—Ä–æ–Ω–Ω–∏—Ö –∏ –Ω–∞–¥—ë–∂–µ–Ω.\n\n"
        "–ú—ã –Ω–µ –¥–æ–≤–µ—Ä—è–µ–º —Å–ª—É—Ö–∞–º ‚Äî —Ç–æ–ª—å–∫–æ —Ä–µ–∞–ª—å–Ω—ã–π –æ–ø—ã—Ç –∏ —Ç–æ—á–Ω–∞—è –∫–æ–æ—Ä–¥–∏–Ω–∞—Ü–∏—è. "
        "–ö–∞–∂–¥–∞—è —Ç–æ—á–∫–∞ –º–∞—Ä—à—Ä—É—Ç–∞, –æ—Å—Ç–∞–Ω–æ–≤–∫–∞ –∏ –≤—Å—Ç—Ä–µ—á–∞ —Å–ø–ª–∞–Ω–∏—Ä–æ–≤–∞–Ω—ã –∑–∞—Ä–∞–Ω–µ–µ. "
        "–í—ã –Ω–µ –æ–∫–∞–∂–µ—Ç–µ—Å—å –Ω–∞—É–≥–∞–¥ ‚Äî —É –≤–∞—Å –±—É–¥–µ—Ç —á—ë—Ç–∫–∏–π, –±–µ–∑–æ–ø–∞—Å–Ω—ã–π –º–∞—Ä—à—Ä—É—Ç –æ—Ç —Å—Ç–∞—Ä—Ç–∞ –¥–æ –∫–æ–Ω—Ü–∞.\n\n"
        "‚ú® –û—Å–Ω–æ–≤–Ω—ã–µ –º–æ–º–µ–Ω—Ç—ã:\n\n"
        "üîπ –ü—Ä–æ–≤–µ—Ä–µ–Ω–Ω—ã–π –º–∞—Ä—à—Ä—É—Ç: –ù–∏–∫–∞–∫–∏—Ö —Å–ª—É—á–∞–π–Ω—ã—Ö —Ç—Ä–æ–ø ‚Äî —Ç–æ–ª—å–∫–æ –ø—Ä–æ–≤–µ—Ä–µ–Ω–Ω—ã–µ –ø—É—Ç–∏, –ø–æ –∫–æ—Ç–æ—Ä—ã–º —É–∂–µ –ø—Ä–æ—Ö–æ–¥–∏–ª–∏ –ª—é–¥–∏.\n"
        "üîπ –ë–µ–∑–æ–ø–∞—Å–Ω–æ—Å—Ç—å: –ú—ã –µ–∂–µ–¥–Ω–µ–≤–Ω–æ –æ—Ç—Å–ª–µ–∂–∏–≤–∞–µ–º –æ–±—Å—Ç–∞–Ω–æ–≤–∫—É: –ø–æ–≥–æ–¥—É, –º–∞—Ä—à—Ä—É—Ç—ã –∏ –≤–æ–∑–º–æ–∂–Ω—ã–µ —Ä–∏—Å–∫–∏.\n"
        "üîπ –ö–æ–º—Ñ–æ—Ä—Ç: –í–∞–º –Ω–µ –ø—Ä–∏–¥—ë—Ç—Å—è –Ω–µ—Å—Ç–∏ —Ç—è–∂—ë–ª—ã–µ —Å—É–º–∫–∏ ‚Äî –≤—Å—ë –ø–æ–¥–≥–æ—Ç–æ–≤–ª–µ–Ω–æ –∑–∞—Ä–∞–Ω–µ–µ, —á—Ç–æ–±—ã –≤—ã —à–ª–∏ –Ω–∞–ª–µ–≥–∫–µ.\n"
        "üîπ –ü–æ–¥–¥–µ—Ä–∂–∫–∞: –í—ã –Ω–µ –±—É–¥–µ—Ç–µ –æ–¥–Ω–∏ ‚Äî –æ–ø—ã—Ç–Ω—ã–π –≥–∏–¥ –∑–Ω–∞–µ—Ç –∫–∞–∂–¥—ã–π –ø–æ–≤–æ—Ä–æ—Ç –∏ –±—É–¥–µ—Ç —Ä—è–¥–æ–º –≤–µ—Å—å –ø—É—Ç—å.\n"
        "üîπ –°–≤—è–∑—å –∏ –∫–æ–Ω—Ç—Ä–æ–ª—å: –ú—ã –æ—Å—Ç–∞—ë–º—Å—è —Å –≤–∞–º–∏ –Ω–∞ —Å–≤—è–∑–∏ –Ω–∞ –∫–∞–∂–¥–æ–º —ç—Ç–∞–ø–µ, —á—Ç–æ–±—ã –≤—ã —á—É–≤—Å—Ç–≤–æ–≤–∞–ª–∏ —É–≤–µ—Ä–µ–Ω–Ω–æ—Å—Ç—å –∏ —Å–ø–æ–∫–æ–π—Å—Ç–≤–∏–µ. üì°\n\n"
        "–ö–∞–∂–¥–∞—è –¥–µ—Ç–∞–ª—å –º–∞—Ä—à—Ä—É—Ç–∞ –ø—Ä–æ–¥—É–º–∞–Ω–∞. –í—Å—ë, —á—Ç–æ –Ω—É–∂–Ω–æ –æ—Ç –≤–∞—Å ‚Äî —Å–ª–µ–¥–æ–≤–∞—Ç—å –∏–Ω—Å—Ç—Ä—É–∫—Ü–∏—è–º –∏ —Å–æ—Ö—Ä–∞–Ω—è—Ç—å —Å–ø–æ–∫–æ–π—Å—Ç–≤–∏–µ."
    )
    await query.message.answer(text, reply_markup=kb_details_to_prep())


@dp.callback_query(F.data == "to_prep")
async def cb_to_prep(query: types.CallbackQuery):
    text = (
        "üõ† –ü–æ–¥–≥–æ—Ç–æ–≤–∫–∞\n\n"
        "–ü–µ—Ä–µ–¥ –≤—ã–µ–∑–¥–æ–º –º—ã –±–µ—Ä—ë–º –Ω–∞ —Å–µ–±—è –≤—Å–µ –æ—Ä–≥–∞–Ω–∏–∑–∞—Ü–∏–æ–Ω–Ω—ã–µ –∑–∞–¥–∞—á–∏.\n"
        "–í–∞–º –Ω–µ –Ω—É–∂–Ω–æ –±–µ—Å–ø–æ–∫–æ–∏—Ç—å—Å—è –æ –¥–µ—Ç–∞–ª—è—Ö ‚Äî –≤—Å—ë –≥–æ—Ç–æ–≤–∏–º –º—ã.\n\n"
        "–ß—Ç–æ –∏–º–µ–Ω–Ω–æ –º—ã –¥–µ–ª–∞–µ–º –¥–ª—è –≤–∞—Å:\n\n"
        "üìç –ú–∞—Ä—à—Ä—É—Ç\n"
        "- –£ –Ω–∞—Å —É–∂–µ –µ—Å—Ç—å –≥–æ—Ç–æ–≤—ã–π –∏ –ø—Ä–æ–≤–µ—Ä–µ–Ω–Ω—ã–π –º–∞—Ä—à—Ä—É—Ç.\n"
        "- –û–Ω –ø–æ–ª–Ω–æ—Å—Ç—å—é –ø—Ä–æ–π–¥–µ–Ω –∏ –Ω–∞–¥—ë–∂–µ–Ω.\n"
        "- –ú—ã —É—á–∏—Ç—ã–≤–∞–µ–º –ø–æ–≥–æ–¥—É, –ø–∞—Ç—Ä—É–ª–∏ –∏ –≤–æ–∑–º–æ–∂–Ω—ã–µ —Ä–∏—Å–∫–∏, —á—Ç–æ–±—ã –ø–µ—Ä–µ—Ö–æ–¥ –±—ã–ª –º–∞–∫—Å–∏–º–∞–ª—å–Ω–æ –±–µ–∑–æ–ø–∞—Å–Ω—ã–º.\n\n"
        "üéí –°–Ω–∞—Ä—è–∂–µ–Ω–∏–µ\n"
"- –í–∞–º –Ω–µ –Ω—É–∂–Ω–æ –Ω–∏—á–µ–≥–æ –±—Ä–∞—Ç—å —Å —Å–æ–±–æ–π.\n"
"- –í—Å—ë –Ω–µ–æ–±—Ö–æ–¥–∏–º–æ–µ –±—É–¥–µ—Ç –∂–¥–∞—Ç—å —É –≥–∏–¥–∞.\n"
"- –ú—ã —Ñ–æ—Ä–º–∏—Ä—É–µ–º –∫–æ–º–ø–ª–µ–∫—Ç –∏–Ω–¥–∏–≤–∏–¥—É–∞–ª—å–Ω–æ –ø–æ–¥ –∫–∞–∂–¥–æ–≥–æ —É—á–∞—Å—Ç–Ω–∏–∫–∞, —Å —É—á—ë—Ç–æ–º —Ä–∞–∑–º–µ—Ä–æ–≤, –≤—Ä–µ–º–µ–Ω–∏ –≥–æ–¥–∞ –∏ —É—Å–ª–æ–≤–∏–π –º–∞—Ä—à—Ä—É—Ç–∞.\n\n"
"–í –Ω–∞–±–æ—Ä –≤—Ö–æ–¥–∏—Ç:\n"
"‚Ä¢ –û–¥–µ–∂–¥–∞ –¥–ª—è –ø–µ—Ä–µ—Ö–æ–¥–∞ ‚Äî –ª—ë–≥–∫–∞—è, —É–¥–æ–±–Ω–∞—è, –Ω–µ–ø—Ä–æ–º–æ–∫–∞–µ–º–∞—è –∏ –ø–æ–¥–æ–±—Ä–∞–Ω–Ω–∞—è –ø–æ –ø–æ–≥–æ–¥–µ.\n"
"‚Ä¢ –û–±—É–≤—å ‚Äî —É—Å—Ç–æ–π—á–∏–≤–∞—è –∏ –∫–æ–º—Ñ–æ—Ä—Ç–Ω–∞—è, —á—Ç–æ–±—ã –≤—ã–¥–µ—Ä–∂–∞—Ç—å –Ω–µ—Ä–æ–≤–Ω–æ—Å—Ç–∏ —Ä–µ–ª—å–µ—Ñ–∞.\n"
"‚Ä¢ –ú–∞—Å–∫-—Ö–∞–ª–∞—Ç ‚Äî –ª—ë–≥–∫–∏–π –∫–∞–º—É—Ñ–ª—è–∂–Ω—ã–π –∫–æ—Å—Ç—é–º, –∫–æ—Ç–æ—Ä—ã–π –ø–æ–º–æ–≥–∞–µ—Ç —Å–ª–∏–≤–∞—Ç—å—Å—è —Å –æ–∫—Ä—É–∂–∞—é—â–µ–π —Å—Ä–µ–¥–æ–π –∏ –Ω–µ –ø—Ä–∏–≤–ª–µ–∫–∞—Ç—å –≤–Ω–∏–º–∞–Ω–∏–µ –≤–æ –≤—Ä–µ–º—è –¥–≤–∏–∂–µ–Ω–∏—è.\n"
"‚Ä¢ –§–æ–Ω–∞—Ä—å –∏ –∑–∞–ø–∞—Å–Ω—ã–µ –±–∞—Ç–∞—Ä–µ–∏ ‚Äî –Ω–∞ —Å–ª—É—á–∞–π –ø–µ—Ä–µ—Ö–æ–¥–∞ –≤ —Å—É–º–µ—Ä–∫–∞—Ö –∏–ª–∏ –ø—Ä–∏ —Å–ª–∞–±–æ–π –≤–∏–¥–∏–º–æ—Å—Ç–∏.\n"
"‚Ä¢ –ü—Ä–æ–¥–æ–≤–æ–ª—å—Å—Ç–≤–µ–Ω–Ω—ã–π –Ω–∞–±–æ—Ä ‚Äî –ª—ë–≥–∫–∞—è –µ–¥–∞, –ø–µ—Ä–µ–∫—É—Å—ã –∏ –≤–æ–¥–∞ –≤ –∏–Ω–¥–∏–≤–∏–¥—É–∞–ª—å–Ω–æ–π —É–ø–∞–∫–æ–≤–∫–µ.\n"
"‚Ä¢ –ê–ø—Ç–µ—á–∫–∞ –ø–µ—Ä–≤–æ–π –Ω–µ–æ–±—Ö–æ–¥–∏–º–æ—Å—Ç–∏ ‚Äî –ø–µ—Ä–µ–≤—è–∑–æ—á–Ω—ã–µ –º–∞—Ç–µ—Ä–∏–∞–ª—ã, –∞–Ω—Ç–∏—Å–µ–ø—Ç–∏–∫, –æ–±–µ–∑–±–æ–ª–∏–≤–∞—é—â–µ–µ –∏ –≤—Å—ë, —á—Ç–æ –º–æ–∂–µ—Ç –ø—Ä–∏–≥–æ–¥–∏—Ç—å—Å—è –≤ –¥–æ—Ä–æ–≥–µ.\n\n"
"–í—Å—ë —Å–Ω–∞—Ä—è–∂–µ–Ω–∏–µ –ø–æ–¥–æ–±—Ä–∞–Ω–æ —Ç–∞–∫, —á—Ç–æ–±—ã –Ω–µ –≤—ã–∑—ã–≤–∞—Ç—å –ø–æ–¥–æ–∑—Ä–µ–Ω–∏–π –∏ –ø—Ä–∏ —ç—Ç–æ–º –æ–±–µ—Å–ø–µ—á–∏—Ç—å –º–∞–∫—Å–∏–º–∞–ª—å–Ω—ã–π –∫–æ–º—Ñ–æ—Ä—Ç –∏ –±–µ–∑–æ–ø–∞—Å–Ω–æ—Å—Ç—å.\n"
"–í–∞–º –æ—Å—Ç–∞—ë—Ç—Å—è —Ç–æ–ª—å–∫–æ –ø—Ä–∏–±—ã—Ç—å –≤ –Ω–∞–∑–Ω–∞—á–µ–Ω–Ω–æ–µ –º–µ—Å—Ç–æ ‚Äî –≤—Å—ë –æ—Å—Ç–∞–ª—å–Ω–æ–µ –º—ã —É–∂–µ –ø–æ–¥–≥–æ—Ç–æ–≤–∏–ª–∏.\n\n"

        "üìñ –ò–Ω—Å—Ç—Ä—É–∫—Ü–∏–∏\n"
        "- –í—ã –ø–æ–ª—É—á–∏—Ç–µ –ø–æ—à–∞–≥–æ–≤—ã–π –ø–ª–∞–Ω: –∫—É–¥–∞ –µ—Ö–∞—Ç—å, –∫–æ–≥–¥–∞ –ø—Ä–∏–±—ã—Ç—å, –∫–∞–∫ —Å–µ–±—è –≤–µ—Å—Ç–∏.\n\n"
        "‚ö†Ô∏è –í–∞–∂–Ω–æ: —á–µ–≥–æ –ù–ï –±—Ä–∞—Ç—å —Å —Å–æ–±–æ–π ‚Äî –±–æ–ª—å—à–∏–µ —Å—É–º–∫–∏, –ª–∏—à–Ω–∏–µ –¥–æ–∫—É–º–µ–Ω—Ç—ã, –¥–æ—Ä–æ–≥–∏–µ –≤–µ—â–∏."
    )
    await query.message.answer(text, reply_markup=kb_prep())

@dp.callback_query(F.data == "sizes")
async def cb_sizes(query: types.CallbackQuery, state: FSMContext):
    await query.message.answer(
        "üëï –ù–∞–ø–∏—à–∏—Ç–µ —Å–≤–æ–∏ —Ä–∞–∑–º–µ—Ä—ã:\n\n"
        "1Ô∏è‚É£ –í–µ—Ä—Ö (—Ñ—É—Ç–±–æ–ª–∫–∞/–∫—É—Ä—Ç–∫–∞)\n"
        "2Ô∏è‚É£ –ù–∏–∑ (–±—Ä—é–∫–∏)\n"
        "3Ô∏è‚É£ –û–±—É–≤—å\n"
        "4Ô∏è‚É£ –û—Å–æ–±—ã–µ –ø–æ–∂–µ–ª–∞–Ω–∏—è"
    )
    await state.set_state(Form.awaiting_sizes)

@dp.message(Form.awaiting_sizes)
async def process_sizes(message: types.Message, state: FSMContext):
    await bot.send_message(ADMIN_ID, f"üì• –†–∞–∑–º–µ—Ä—ã –æ—Ç @{message.from_user.username}:\n{message.text}")
    await message.answer("‚úÖ –†–∞–∑–º–µ—Ä—ã –ø–æ–ª—É—á–µ–Ω—ã. –°–ø–∞—Å–∏–±–æ! –î–ª—è –ø—Ä–æ–¥–æ–ª–∂–µ–Ω–∏—è –Ω–∞–∂–º–∏—Ç–µ –Ω–∞ –∫–Ω–æ–ø–∫—É –ü—Ä–æ–¥–æ–ª–∂–∏—Ç—å")
    await state.clear()

# Callback: next -> meeting
@dp.callback_query(lambda c: c.data == "to_meet")
async def cb_to_meet(query: types.CallbackQuery):
    await query.answer()
    text = (
        "ü§ù –í—Å—Ç—Ä–µ—á–∞ —Å –≥–∏–¥–æ–º\n\n"
        "–í —Ç–æ—á–∫–µ –ø–µ—Ä–µ—Ö–æ–¥–∞ –≤–∞—Å –≤—Å—Ç—Ä–µ—Ç–∏—Ç –Ω–∞—à –≥–∏–¥ ‚Äî —á–µ–ª–æ–≤–µ–∫, –∫–æ—Ç–æ—Ä—ã–π –æ—Ç–ª–∏—á–Ω–æ –∑–Ω–∞–µ—Ç –º–∞—Ä—à—Ä—É—Ç –∏ –≤—Å–µ –µ–≥–æ –æ—Å–æ–±–µ–Ω–Ω–æ—Å—Ç–∏.\n"
        "–û–Ω –∑–∞—Ä–∞–Ω–µ–µ –±—É–¥–µ—Ç –ø—Ä–æ–∏–Ω—Ñ–æ—Ä–º–∏—Ä–æ–≤–∞–Ω –æ –≤–∞—à–µ–º –ø—Ä–∏–±—ã—Ç–∏–∏ –∏ –ø–æ–¥–≥–æ—Ç–æ–≤–∏—Ç –≤—Å—ë –Ω–µ–æ–±—Ö–æ–¥–∏–º–æ–µ –∫ –≤—Å—Ç—Ä–µ—á–µ.\n\n"
        "üîπ –ß—Ç–æ –ø—Ä–æ–∏—Å—Ö–æ–¥–∏—Ç –ø—Ä–∏ –≤—Å—Ç—Ä–µ—á–µ:\n"
        "- –ì–∏–¥ –ø–µ—Ä–µ–¥–∞—ë—Ç –≤–∞–º –ø–æ–ª–Ω—ã–π –∫–æ–º–ø–ª–µ–∫—Ç —Å–Ω–∞—Ä—è–∂–µ–Ω–∏—è, –∑–∞—Ä–∞–Ω–µ–µ –ø–æ–¥–æ–±—Ä–∞–Ω–Ω—ã–π –ø–æ–¥ –≤–∞—à–∏ —Ä–∞–∑–º–µ—Ä—ã –∏ –ø–æ–≥–æ–¥–Ω—ã–µ —É—Å–ª–æ–≤–∏—è.\n"
        "- –û–±—ä—è—Å–Ω—è–µ—Ç –ø–æ—Å–ª–µ–¥–Ω–∏–µ –¥–µ—Ç–∞–ª–∏ –º–∞—Ä—à—Ä—É—Ç–∞, –æ—Å–æ–±–µ–Ω–Ω–æ—Å—Ç–∏ —Ä–µ–ª—å–µ—Ñ–∞ –∏ –¥–∞—ë—Ç —Ä–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏–∏ –ø–æ —Ç–µ–º–ø—É –¥–≤–∏–∂–µ–Ω–∏—è.\n"
        "- –ü—Ä–æ–≤–µ—Ä—è–µ—Ç, —á—Ç–æ–±—ã –≤—ã —á—É–≤—Å—Ç–≤–æ–≤–∞–ª–∏ —Å–µ–±—è —É–≤–µ—Ä–µ–Ω–Ω–æ –∏ —Å–ø–æ–∫–æ–π–Ω–æ –ø–µ—Ä–µ–¥ –Ω–∞—á–∞–ª–æ–º –ø–µ—Ä–µ—Ö–æ–¥–∞.\n\n"
        "üîπ –ö–∞–∫ –ø—Ä–æ—Ö–æ–¥–∏—Ç –ø–µ—Ä–µ—Ö–æ–¥:\n"
        "–ü–æ—Å–ª–µ –∏–Ω—Å—Ç—Ä—É–∫—Ç–∞–∂–∞ –≤—ã –≤–º–µ—Å—Ç–µ –Ω–∞—á–∏–Ω–∞–µ—Ç–µ –¥–≤–∏–∂–µ–Ω–∏–µ –ø–æ –∑–∞—Ä–∞–Ω–µ–µ –ø—Ä–æ–≤–µ—Ä–µ–Ω–Ω–æ–º—É –∏ –±–µ–∑–æ–ø–∞—Å–Ω–æ–º—É –º–∞—Ä—à—Ä—É—Ç—É.\n"
        "–ü—É—Ç—å —Å–ø–ª–∞–Ω–∏—Ä–æ–≤–∞–Ω —Ç–∞–∫, —á—Ç–æ–±—ã –º–∏–Ω–∏–º–∏–∑–∏—Ä–æ–≤–∞—Ç—å –≤–µ—Ä–æ—è—Ç–Ω–æ—Å—Ç—å –≤—Å—Ç—Ä–µ—á–∏ —Å –ø–æ—Å—Ç–æ—Ä–æ–Ω–Ω–∏–º–∏ –∏ –æ–±–µ—Å–ø–µ—á–∏—Ç—å –≤–∞–º –º–∞–∫—Å–∏–º–∞–ª—å–Ω—É—é –±–µ–∑–æ–ø–∞—Å–Ω–æ—Å—Ç—å.\n\n"
        "üîπ –ü–æ–¥–¥–µ—Ä–∂–∫–∞ –Ω–∞ –≤—Å—ë–º –ø—É—Ç–∏:\n"
        "–ì–∏–¥ —Å–æ–ø—Ä–æ–≤–æ–∂–¥–∞–µ—Ç –≤–∞—Å –¥–æ —Å–∞–º–æ–π –∫–æ–Ω–µ—á–Ω–æ–π —Ç–æ—á–∫–∏, –ø–æ–º–æ–≥–∞–µ—Ç –æ—Ä–∏–µ–Ω—Ç–∏—Ä–æ–≤–∞—Ç—å—Å—è, –∫–æ–Ω—Ç—Ä–æ–ª–∏—Ä—É–µ—Ç —Ç–µ–º–ø –∏ —Å–ª–µ–¥–∏—Ç –∑–∞ –≤–∞—à–∏–º —Å–æ—Å—Ç–æ—è–Ω–∏–µ–º.\n"
        "–í —Å–ª—É—á–∞–µ –Ω–µ–ø—Ä–µ–¥–≤–∏–¥–µ–Ω–Ω—ã—Ö —Å–∏—Ç—É–∞—Ü–∏–π –æ–Ω –∑–Ω–∞–µ—Ç, –∫–∞–∫ –¥–µ–π—Å—Ç–≤–æ–≤–∞—Ç—å, –∏ –≤—Å–µ–≥–¥–∞ –∏–º–µ–µ—Ç —Ä–µ–∑–µ—Ä–≤–Ω—ã–π –ø–ª–∞–Ω.\n\n"
        "üß≠ –ö —Ç–æ—á–∫–µ —Å–±–æ—Ä–∞ –≤—ã –ø—Ä–∏–±—ã–≤–∞–µ—Ç–µ –Ω–∞–ª–µ–≥–∫–µ, –±–µ–∑ –∏–∑–ª–∏—à–Ω–µ–≥–æ –≥—Ä—É–∑–∞ –∏ —Ä–∏—Å–∫–∞ –ø—Ä–∏–≤–ª–µ—á—å –≤–Ω–∏–º–∞–Ω–∏–µ.\n"
        "–í—Å—ë –Ω–µ–æ–±—Ö–æ–¥–∏–º–æ–µ —É–∂–µ –Ω–∞—Ö–æ–¥–∏—Ç—Å—è —É –≥–∏–¥–∞, –∞ –Ω–∞—à–∞ –∫–æ–º–∞–Ω–¥–∞ –æ—Ç—Å–ª–µ–∂–∏–≤–∞–µ—Ç –æ–±—Å—Ç–∞–Ω–æ–≤–∫—É –∏ –ø–æ–≥–æ–¥—É –ø–æ –º–∞—Ä—à—Ä—É—Ç—É, —á—Ç–æ–±—ã –≤—ã –º–æ–≥–ª–∏ –ø—Ä–æ—Å—Ç–æ –¥–≤–∏–≥–∞—Ç—å—Å—è –≤–ø–µ—Ä—ë–¥ —Å–ø–æ–∫–æ–π–Ω–æ –∏ —É–≤–µ—Ä–µ–Ω–Ω–æ."
    )
    kb = InlineKeyboardMarkup(inline_keyboard=[
        [InlineKeyboardButton(text="üí∞ –ü–µ—Ä–µ–π—Ç–∏ –∫ –æ–ø–ª–∞—Ç–µ", callback_data="to_payment")]
    ])
    await bot.send_message(query.from_user.id, text, reply_markup=kb)

# === –ë–ª–æ–∫ –û–ü–õ–ê–¢–ê ===

@dp.callback_query(F.data == "to_payment")
async def cb_to_payment(query: types.CallbackQuery):
    await query.message.answer(
        "üí∞ –û–ø–ª–∞—Ç–∞\n\n"
        "–ü–æ–ª–Ω–∞—è —Å—Ç–æ–∏–º–æ—Å—Ç—å –≤—Å–µ–π –ø—Ä–æ—Ü–µ–¥—É—Ä—ã —Å–æ—Å—Ç–∞–≤–ª—è–µ—Ç 5000$.\n\n"
        "–û–ø–ª–∞—Ç–∞ –¥–µ–ª–∏—Ç—Å—è –Ω–∞ –¥–≤–∞ —ç—Ç–∞–ø–∞:\n"
        "‚Ä¢ –ü–µ—Ä–≤—ã–π –≤–∑–Ω–æ—Å ‚Äî 2500$: –¥–æ –Ω–∞—á–∞–ª–∞ –ø–æ–¥–≥–æ—Ç–æ–≤–∫–∏ (–º—ã —Å—Ä–∞–∑—É –Ω–∞—á–∏–Ω–∞–µ–º –ø—Ä–æ–≤–µ—Ä–∫—É –º–∞—Ä—à—Ä—É—Ç–∞, –ø–æ–¥–≥–æ—Ç–æ–≤–∫—É —Å–Ω–∞—Ä—è–∂–µ–Ω–∏—è –∏ –æ—Ä–≥–∞–Ω–∏–∑–∞—Ü–∏—é –≤—Å—Ç—Ä–µ—á–∏ —Å –≥–∏–¥–æ–º);\n"
        "‚Ä¢ –í—Ç–æ—Ä–æ–π –≤–∑–Ω–æ—Å ‚Äî 2500$: –ø—Ä–∏ –≤—Å—Ç—Ä–µ—á–µ —Å –≥–∏–¥–æ–º –≤ —Ç–æ—á–∫–µ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–∏—è.\n\n"
        "–¢–∞–∫ –≤—ã –æ–ø–ª–∞—á–∏–≤–∞–µ—Ç–µ —Ç–æ–ª—å–∫–æ –∑–∞ —Ä–µ–∞–ª—å–Ω—ã–π —Ä–µ–∑—É–ª—å—Ç–∞—Ç ‚Äî –≤—Å—ë –ø—Ä–æ–∑—Ä–∞—á–Ω–æ –∏ –ø–æ—ç—Ç–∞–ø–Ω–æ.\n\n"
        "–ü–æ—Å–ª–µ –ø–µ—Ä–≤–æ–≥–æ –≤–∑–Ω–æ—Å–∞ –Ω–∞—á–∏–Ω–∞–µ—Ç—Å—è –ø–æ–¥–≥–æ—Ç–æ–≤–∏—Ç–µ–ª—å–Ω—ã–π —ç—Ç–∞–ø (20‚Äì30 –¥–Ω–µ–π):\n"
        "–º—ã –ø—Ä–æ–≤–µ—Ä—è–µ–º –º–∞—Ä—à—Ä—É—Ç, –ø–æ–¥–±–∏—Ä–∞–µ–º —Å–Ω–∞—Ä—è–∂–µ–Ω–∏–µ –∏ –≥–æ—Ç–æ–≤–∏–º –≤—Å—ë –Ω–µ–æ–±—Ö–æ–¥–∏–º–æ–µ.\n\n"
        "–í—ã–±–µ—Ä–∏—Ç–µ —É–¥–æ–±–Ω—ã–π —Å–ø–æ—Å–æ–± –æ–ø–ª–∞—Ç—ã üëá",
        reply_markup=kb_to_payment()
    )

@dp.callback_query(F.data == "pay_visa")
async def cb_pay_visa(query: types.CallbackQuery):
    last_payment_method[query.from_user.id] = "VISA"
    await query.message.answer(
        f"üí≥ –†–µ–∫–≤–∏–∑–∏—Ç—ã –¥–ª—è –æ–ø–ª–∞—Ç—ã (VISA)\n\n"
        f"–ù–æ–º–µ—Ä –∫–∞—Ä—Ç—ã: {VISA_CARD}\n"
       
        "–ü–æ—Å–ª–µ –ø–µ—Ä–µ–≤–æ–¥–∞ –Ω–∞–∂–º–∏—Ç–µ –∫–Ω–æ–ø–∫—É –Ω–∏–∂–µ –∏ –ø—Ä–∏–∫—Ä–µ–ø–∏—Ç–µ —Ñ–æ—Ç–æ/—Å–∫—Ä–∏–Ω—à–æ—Ç —á–µ–∫–∞ üëá",
        reply_markup=kb_send_check()
    )

@dp.callback_query(F.data == "pay_trc20")
async def cb_pay_trc20(query: types.CallbackQuery):
    last_payment_method[query.from_user.id] = "TRC20"
    await query.message.answer(
        f"‚Çø **–û–ø–ª–∞—Ç–∞ –≤ USDT (TRC20)**\n\n"
        f"**–ê–¥—Ä–µ—Å –∫–æ—à–µ–ª—å–∫–∞:**\n`{TRC20_ADDR}`\n\n"
        "‚ö†Ô∏è *–í–ù–ò–ú–ê–ù–ò–ï!* –ö–æ–ø–∏—Ä—É–π—Ç–µ –∞–¥—Ä–µ—Å –≤–Ω–∏–º–∞—Ç–µ–ª—å–Ω–æ ‚Äî –±–µ–∑ –ø—Ä–æ–±–µ–ª–æ–≤ –∏ –Ω–µ –ø—Ä–æ–ø—É—Å–∫–∞—è —Å–∏–º–≤–æ–ª–æ–≤.\n\n"
        "–ü–æ—Å–ª–µ –ø–µ—Ä–µ–≤–æ–¥–∞ –Ω–∞–∂–º–∏—Ç–µ –∫–Ω–æ–ø–∫—É –Ω–∏–∂–µ –∏ –ø—Ä–∏–∫—Ä–µ–ø–∏—Ç–µ —Ñ–æ—Ç–æ –∏–ª–∏ —Å–∫—Ä–∏–Ω—à–æ—Ç —Ç—Ä–∞–Ω–∑–∞–∫—Ü–∏–∏ üëá",
        reply_markup=kb_send_check(),
        parse_mode="Markdown"
    )

@dp.callback_query(F.data == "i_sent_check")
async def i_sent_check(query: types.CallbackQuery):
    await query.message.answer(
        "üì§ –ü—Ä–∏–∫—Ä–µ–ø–∏—Ç–µ —Ñ–æ—Ç–æ –∏–ª–∏ —Å–∫—Ä–∏–Ω—à–æ—Ç –ø–ª–∞—Ç–µ–∂–∞ –ø—Ä—è–º–æ —Å—é–¥–∞ –≤ —á–∞—Ç.\n"
        "–ö–∞–∫ —Ç–æ–ª—å–∫–æ –≤—ã —ç—Ç–æ —Å–¥–µ–ª–∞–µ—Ç–µ, —á–µ–∫ –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏ —É–π–¥—ë—Ç –Ω–∞ –ø—Ä–æ–≤–µ—Ä–∫—É –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä—É."
    )

@dp.message(lambda message: message.photo or message.document)
async def handle_check(message: types.Message):
    user_id = message.from_user.id
    method = last_payment_method.get(user_id, "–ù–µ —É–∫–∞–∑–∞–Ω")

    # –û–ø—Ä–µ–¥–µ–ª—è–µ–º ID —Ñ–∞–π–ª–∞
    file_id = None
    if message.photo:
        file_id = message.photo[-1].file_id
    elif message.document:
        file_id = message.document.file_id

    if not file_id:
        await message.answer("‚ùå –û—à–∏–±–∫–∞: –Ω–µ —É–¥–∞–ª–æ—Å—å –ø–æ–ª—É—á–∏—Ç—å —Ñ–∞–π–ª.")
        return

    # –ö–Ω–æ–ø–∫–∏ –¥–ª—è –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏—è/–æ—Ç–∫–ª–æ–Ω–µ–Ω–∏—è
    kb = InlineKeyboardMarkup(inline_keyboard=[
        [InlineKeyboardButton(text="‚úÖ –ü–æ–¥—Ç–≤–µ—Ä–¥–∏—Ç—å –æ–ø–ª–∞—Ç—É", callback_data=f"confirm:{user_id}")],
        [InlineKeyboardButton(text="‚ùå –û—Ç–∫–ª–æ–Ω–∏—Ç—å –æ–ø–ª–∞—Ç—É", callback_data=f"reject:{user_id}")]
    ])

    # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º –∞–¥–º–∏–Ω—É —á–µ–∫ —Å –∫–Ω–æ–ø–∫–∞–º–∏
    caption = (
        f"üì• –ù–æ–≤—ã–π —á–µ–∫ –Ω–∞ –ø—Ä–æ–≤–µ—Ä–∫—É\n\n"
        f"üë§ –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å ID: {user_id}\n"
        f"üí≥ –ú–µ—Ç–æ–¥ –æ–ø–ª–∞—Ç—ã: {method}\n\n"
        "–í—ã–±–µ—Ä–∏—Ç–µ –¥–µ–π—Å—Ç–≤–∏–µ –Ω–∏–∂–µ üëá"
    )

    try:
        if message.photo:
            await bot.send_photo(ADMIN_ID, photo=file_id, caption=caption, reply_markup=kb)
        else:
            await bot.send_document(ADMIN_ID, document=file_id, caption=caption, reply_markup=kb)
    except Exception as e:
        await message.answer(f"‚ö†Ô∏è –û—à–∏–±–∫–∞ –ø—Ä–∏ –æ—Ç–ø—Ä–∞–≤–∫–µ –∞–¥–º–∏–Ω—É: {e}")
        return

    # –ü–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é
    await message.answer(
        "‚úÖ –ß–µ–∫ –ø–æ–ª—É—á–µ–Ω –∏ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω –Ω–∞ –ø—Ä–æ–≤–µ—Ä–∫—É.\n"
        "–ü—Ä–æ–≤–µ—Ä–∫–∞ –∑–∞–Ω–∏–º–∞–µ—Ç –¥–æ 30 –º–∏–Ω—É—Ç. –û–∂–∏–¥–∞–π—Ç–µ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è."
    )

@dp.callback_query(F.data.startswith("confirm:"))
async def confirm_payment(query: types.CallbackQuery):
    if query.from_user.id != ADMIN_ID:
        await query.answer("–í—ã –Ω–µ –∞–≤—Ç–æ—Ä–∏–∑–æ–≤–∞–Ω—ã.", show_alert=True)
        return

    uid = int(query.data.split(":")[1])
    await bot.send_message(
        uid,
        "‚úÖ –û–ø–ª–∞—Ç–∞ —É—Å–ø–µ—à–Ω–æ –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∞!\n\n"
        "–ú—ã –ø—Ä–∏—Å—Ç—É–ø–∏–ª–∏ –∫ –ø–æ–¥–≥–æ—Ç–æ–≤–∏—Ç–µ–ª—å–Ω—ã–º —Ä–∞–±–æ—Ç–∞–º:\n"
        "- –ü—Ä–æ–≤–µ—Ä—è–µ–º –º–∞—Ä—à—Ä—É—Ç –∏ –∞–∫—Ç—É–∞–ª—å–Ω—É—é –æ–±—Å—Ç–∞–Ω–æ–≤–∫—É.\n"
        "- –ü–æ–¥–±–∏—Ä–∞–µ–º –∫–æ–º–ø–ª–µ–∫—Ç –≤–∞—à–µ–≥–æ –∏–Ω–¥–∏–≤–∏–¥—É–∞–ª—å–Ω–æ–≥–æ —Å–Ω–∞—Ä—è–∂–µ–Ω–∏—è.\n"
        "- –ö–æ–æ—Ä–¥–∏–Ω–∏—Ä—É–µ–º –º–µ—Å—Ç–æ –∏ –≤—Ä–µ–º—è –≤—Å—Ç—Ä–µ—á–∏ —Å –≥–∏–¥–æ–º.\n\n"
        "üïí –ü–æ–¥–≥–æ—Ç–æ–≤–∫–∞ –∑–∞–π–º—ë—Ç –æ—Ç 20 –¥–æ 30 –¥–Ω–µ–π.\n\n"
        "üí™ –ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ —ç—Ç–æ –≤—Ä–µ–º—è –¥–ª—è –ª—ë–≥–∫–æ–π —Ñ–∏–∑–∏—á–µ—Å–∫–æ–π –ø–æ–¥–≥–æ—Ç–æ–≤–∫–∏ ‚Äî –ø—Ä–æ–≥—É–ª–∫–∏, —Ä–∞—Å—Ç—è–∂–∫–∞, –¥—ã—Ö–∞—Ç–µ–ª—å–Ω—ã–µ —É–ø—Ä–∞–∂–Ω–µ–Ω–∏—è.\n\n"
        "üì© –ü–æ—Å–ª–µ –∑–∞–≤–µ—Ä—à–µ–Ω–∏—è –ø–æ–¥–≥–æ—Ç–æ–≤–∫–∏ –≤—ã –ø–æ–ª—É—á–∏—Ç–µ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ —Å —Ç–æ—á–Ω–æ–π –¥–∞—Ç–æ–π –∏ –≤—Ä–µ–º–µ–Ω–µ–º –≤—ã–µ–∑–¥–∞."
    )

    await query.answer("–ü–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏–µ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é.", show_alert=True)
    await bot.send_message(ADMIN_ID, f"‚úÖ –û–ø–ª–∞—Ç–∞ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è {uid} –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∞.")

@dp.callback_query(F.data.startswith("reject:"))
async def reject_payment(query: types.CallbackQuery):
    if query.from_user.id != ADMIN_ID:
        await query.answer("–í—ã –Ω–µ –∞–≤—Ç–æ—Ä–∏–∑–æ–≤–∞–Ω—ã.", show_alert=True)
        return

    uid = int(query.data.split(":")[1])
    await bot.send_message(
        uid,
        "‚ùå –û–ø–ª–∞—Ç–∞ –Ω–µ –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∞.\n\n"
        "–ü—Ä–æ–≤–µ—Ä—å—Ç–µ –ø—Ä–∞–≤–∏–ª—å–Ω–æ—Å—Ç—å –ø–µ—Ä–µ–≤–æ–¥–∞ –∏ –æ—Ç–ø—Ä–∞–≤—å—Ç–µ —á–µ–∫ –ø–æ–≤—Ç–æ—Ä–Ω–æ.\n"
        "–ï—Å–ª–∏ –≤–æ–ø—Ä–æ—Å –Ω–µ —Ä–µ—à—ë–Ω ‚Äî —Å–≤—è–∂–∏—Ç–µ—Å—å —Å –ø–æ–¥–¥–µ—Ä–∂–∫–æ–π."
    )

    await query.answer("–û—Ç–∫–∞–∑ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é.", show_alert=True)
    await bot.send_message(ADMIN_ID, f"‚ùå –û–ø–ª–∞—Ç–∞ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è {uid} –æ—Ç–∫–ª–æ–Ω–µ–Ω–∞.")
# --- –ó–∞–ø—É—Å–∫ ---
async def main():
    print("Bot started...")
    await dp.start_polling(bot)

if __name__ == "__main__":
    asyncio.run(main())
